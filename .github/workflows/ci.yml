name: CI Security Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Gitleaks Secret Scan
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
          fail: true
          output-path: gitleaks-report.json

      - name: Build Docker Image
        run: docker build -t secure-mini-lab:local .

      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: secure-mini-lab:local
          format: "json"
          output: trivy-report.json
          exit-code: "1"
          severity: "HIGH,CRITICAL"

      # Save all reports as artifacts for SOC2 evidence
      - name: Upload Security Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            gitleaks-report.json
            trivy-report.json

  deploy-stage:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Install OPA
        run: scripts/install_conftest.sh

      - name: Run OPA Policy Checks
        run: conftest test k8s/environments/stage/*.yaml -p policy/ -o json > conftest-stage-report.json

      - name: Deploy to Staging
        run: |
          echo "Deploying to Staging"

      - name: Upload Security Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: stage-reports
          path: |
            conftest-stage-report.json

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-stage
    environment:
      name: production
      # In GitHub, this triggers a manual approval gate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Install OPA
        run: scripts/install_conftest.sh

      - name: Run OPA Policy Checks
        run: conftest test k8s/environments/prod/*.yaml -p policy/ -o json > conftest-prod-report.json

      - name: Deploy to Production
        run: |
          echo "Deploying to Production"

      - name: Upload Security Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prod-reports
          path: |
            conftest-prod-report.json
